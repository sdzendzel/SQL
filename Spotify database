--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata;

--What is the average danceability by artist and track?
SELECT artist_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--Who are the top 10 artists based on popularity?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

--What artist released the longest song?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC LIMIT 1;

--What's the average danceability for the 10 most popular songs?
SELECT avg(danceability)
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

--Which 5 tracks have the highest energy?
SELECT track_name, energy
FROM BIT_DB.Spotifydata
ORDER BY energy DESC LIMIT 5;

--How many tracks per artist?
SELECT artist_name, COUNT(track_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--Which track has the slowesst tempo?
SELECT track_name, tempo
FROM BIT_DB.Spotifydata
ORDER BY tempo ASC LIMIT 1;

--How many tracks have a song mode of 1?
SELECT COUNT(song_mode)
FROM BIT_DB.Spotifydata
WHERE song_mode = '1';

--Using a CTE: Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH tempTable AS (
SELECT s.artist_name, AVG(s.popularity) AS avg_popularity
FROM Spotifydata s
GROUP BY s.artist_name
)

SELECT artist_name, avg_popularity,'Top Star' AS tag
FROM tempTable
WHERE avg_popularity>=90;
